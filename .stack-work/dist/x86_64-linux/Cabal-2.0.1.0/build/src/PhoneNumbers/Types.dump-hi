
==================== FINAL INTERFACE ====================
2018-01-28 03:04:03.4247 UTC

interface haskell-phonenumbers-0.1.0.0-G1l6X6dWTOTCGj5StqFqBF:PhoneNumbers.Types 8022
  interface hash: 0c88161e2e2f914da976fd9e4b8540de
  ABI hash: 041704c11de980d6a91b09539a310127
  export-list hash: ea9684bfc100662bac3a6ba86a7d7b79
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7341edd457925bc8ec4f915755dc8f09
  sig of: Nothing
  used TH splices: True
  where
exports:
  PhoneNumbers.Types.CountryCode{PhoneNumbers.Types.CA PhoneNumbers.Types.GB PhoneNumbers.Types.None}
  PhoneNumbers.Types.NoPhone{PhoneNumbers.Types.NoPhone}
  PhoneNumbers.Types.PhoneNumber{PhoneNumbers.Types.PhoneNumber}
  PhoneNumbers.Types.PhoneNumberFormat{PhoneNumbers.Types.PhoneNumberFormat}
  PhoneNumbers.Types.PhoneNumberFormats
  PhoneNumbers.Types.PhoneNumberMatcher{PhoneNumbers.Types.PhoneNumberMatcher}
  PhoneNumbers.Types.PhoneNumberModule{PhoneNumbers.Types.PhoneNumberModule}
  PhoneNumbers.Types.PhoneNumberRegion
  PhoneNumbers.Types.Region{PhoneNumbers.Types.E164 PhoneNumbers.Types.INTERNATIONAL PhoneNumbers.Types.NATIONAL}
module dependencies:
package dependencies: aeson-1.2.3.0 array-0.5.2.0
                      attoparsec-0.13.2.0 base-4.10.1.0 base-compat-0.9.3 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.10.2 cpython-3.4.0
                      deepseq-1.4.3.0 dlist-0.8.0.3 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.6.1 integer-gmp-1.0.1.0 integer-logarithms-1.0.2
                      pretty-1.1.3.3 primitive-0.6.2.0 random-1.1 scientific-0.3.5.2
                      tagged-0.8.5 template-haskell-2.12.0.0 text-1.2.2.2
                      th-abstraction-0.2.6.0 time-1.8.0.2 time-locale-compat-0.1.1.3
                      transformers-0.5.2.0 unordered-containers-0.2.8.0 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: attoparsec-0.13.2.0:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.0:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.6.1:Data.Hashable.Generic text-1.2.2.2:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         cpython-3.4.0:CPython.Types.Dictionary
         cpython-3.4.0:CPython.Types.Tuple text-1.2.2.2:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: aeson-1.2.3.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.0:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         dlist-0.8.0.3:Data.DList ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-abstraction-0.2.6.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.8.0:Data.HashMap.Base
                         unordered-containers-0.2.8.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.2.3.0:Data.Aeson dc7d2d8e683b70726f4b41384021a09e
import  -/  aeson-1.2.3.0:Data.Aeson.TH 587ade89535f290c653becd2d90a4abc
import  -/  aeson-1.2.3.0:Data.Aeson.Types.FromJSON 9b85f08e2aefe31c8095948ab3d6f4f6
import  -/  aeson-1.2.3.0:Data.Aeson.Types.Internal fae0996c9725d4bb2ff239af6669cb2a
import  -/  aeson-1.2.3.0:Data.Aeson.Types.ToJSON dab3244de4139a944213b6b37651bf6a
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  cpython-3.4.0:CPython.Internal 905cd686888b54e97135c09cb6746cdb
import  -/  cpython-3.4.0:CPython.Protocols.Object bcd10895d785ce13e02c574d87573e09
import  -/  cpython-3.4.0:CPython.Types.Module a2c42188700b4392b520535e03248d77
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  text-1.2.2.2:Data.Text 179ed20f3e41d2270f9a36dd7f638215
import  -/  text-1.2.2.2:Data.Text.Internal 965a1ec05875083803dc83d56dbb61f7
2341ad7f4515cbb64beeadfcdba595ae
  $fFromJSONPhoneNumberFormat ::
    Data.Aeson.Types.FromJSON.FromJSON
      PhoneNumbers.Types.PhoneNumberFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ PhoneNumbers.Types.PhoneNumberFormat
                  PhoneNumbers.Types.$fFromJSONPhoneNumberFormat_$cparseJSON
                  PhoneNumbers.Types.$fFromJSONPhoneNumberFormat_$cparseJSONList -}
d2d6897691176de97085ed704efc5b16
  $fFromJSONPhoneNumberFormat1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
34f3b7ca0df46f3a4f03980246e9f705
  $fFromJSONPhoneNumberFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
e82a21550062031d182b56fd3206c179
  $fFromJSONPhoneNumberFormat3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
b44cbab3ad4d33148f3e145148105176
  $fFromJSONPhoneNumberFormat4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fFromJSONPhoneNumberFormat5) -}
a1a93c5da5078ac6b0b5c7a7b41985ec
  $fFromJSONPhoneNumberFormat5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Text"#) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fFromJSONPhoneNumberFormat_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         PhoneNumbers.Types.PhoneNumberFormat
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser Data.Text.Internal.Text
                   = case value of wild {
                       DEFAULT
                       -> let {
                            msg20 :: GHC.Base.String
                            = GHC.CString.unpackAppendCString#
                                Data.Aeson.Types.FromJSON.typeMismatch4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   PhoneNumbers.Types.$fFromJSONPhoneNumberFormat4
                                   (GHC.CString.unpackAppendCString#
                                      Data.Aeson.Types.FromJSON.typeMismatch3
                                      (case wild of wild1 {
                                         Data.Aeson.Types.Internal.Object ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                         Data.Aeson.Types.Internal.Array ds
                                         -> Data.Aeson.Types.FromJSON.typeMismatch1
                                         Data.Aeson.Types.Internal.Number ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                         Data.Aeson.Types.Internal.Bool ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                         Data.Aeson.Types.Internal.Null
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (_ks :: Data.Aeson.Types.Internal.Success
                                       Data.Text.Internal.Text f4 r)[OneShot] ->
                           kf
                             (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                             msg20)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <Data.Text.Internal.Text>_R))
                       Data.Aeson.Types.Internal.String txt
                       -> (\ @ f4 :: * -> *
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (ks :: Data.Aeson.Types.Internal.Success
                                      Data.Text.Internal.Text f4 r)[OneShot] ->
                           ks txt)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <Data.Text.Internal.Text>_R)) }
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             PhoneNumbers.Types.PhoneNumberFormat f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <Data.Text.Internal.Text>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a1 :: Data.Text.Internal.Text) ->
                     ks (PhoneNumbers.Types.PhoneNumberFormat a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <PhoneNumbers.Types.PhoneNumberFormat>_R))) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fFromJSONPhoneNumberFormat_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [PhoneNumbers.Types.PhoneNumberFormat]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            PhoneNumbers.Types.$fFromJSONPhoneNumberFormat3
                            (GHC.CString.unpackAppendCString#
                               PhoneNumbers.Types.$fFromJSONPhoneNumberFormat2
                               (GHC.CString.unpackAppendCString#
                                  PhoneNumbers.Types.$fFromJSONPhoneNumberFormat1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [PhoneNumbers.Types.PhoneNumberFormat] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[PhoneNumbers.Types.PhoneNumberFormat]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww dt1) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      PhoneNumbers.Types.$fFromJSONPhoneNumberFormat_go
                        0#
                        ($wgo 0#) } }) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fFromJSONPhoneNumberFormat_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [PhoneNumbers.Types.PhoneNumberFormat]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
57b663ec0137efbc974036ab71d14fff
  $fShowCountryCode :: GHC.Show.Show PhoneNumbers.Types.CountryCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ PhoneNumbers.Types.CountryCode
                  PhoneNumbers.Types.$fShowCountryCode_$cshowsPrec
                  PhoneNumbers.Types.$fShowCountryCode_$cshow
                  PhoneNumbers.Types.$fShowCountryCode_$cshowList -}
8131b4836ba7b8f07d57d4dbae80bc7f
  $fShowCountryCode1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowCountryCode2) -}
6e135da325d45804774f5e025d0f79c3
  $fShowCountryCode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("None"#) -}
62369dc39d2eef654fd483599ce9262c
  $fShowCountryCode3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowCountryCode4) -}
fffce35d8caf6a42423844509b163fbb
  $fShowCountryCode4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GB"#) -}
197af453f53c310912c9ab2147d558f9
  $fShowCountryCode5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowCountryCode6) -}
2ba96ea04eb7b3656b814e394e5fd127
  $fShowCountryCode6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CA"#) -}
57b663ec0137efbc974036ab71d14fff
  $fShowCountryCode_$cshow ::
    PhoneNumbers.Types.CountryCode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: PhoneNumbers.Types.CountryCode) ->
                 case x of wild {
                   PhoneNumbers.Types.CA -> PhoneNumbers.Types.$fShowCountryCode5
                   PhoneNumbers.Types.GB -> PhoneNumbers.Types.$fShowCountryCode3
                   PhoneNumbers.Types.None
                   -> PhoneNumbers.Types.$fShowCountryCode1 }) -}
57b663ec0137efbc974036ab71d14fff
  $fShowCountryCode_$cshowList ::
    [PhoneNumbers.Types.CountryCode] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ PhoneNumbers.Types.CountryCode
                   PhoneNumbers.Types.$w$cshowsPrec) -}
57b663ec0137efbc974036ab71d14fff
  $fShowCountryCode_$cshowsPrec ::
    GHC.Types.Int -> PhoneNumbers.Types.CountryCode -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: PhoneNumbers.Types.CountryCode)
                   (w2 :: GHC.Base.String) ->
                 PhoneNumbers.Types.$w$cshowsPrec w1 w2) -}
e199367aee5f2b564906d70a79a27d7e
  $fShowNoPhone :: GHC.Show.Show PhoneNumbers.Types.NoPhone
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ PhoneNumbers.Types.NoPhone
                  PhoneNumbers.Types.$fShowNoPhone_$cshowsPrec
                  PhoneNumbers.Types.$fShowNoPhone_$cshow
                  PhoneNumbers.Types.$fShowNoPhone_$cshowList -}
e199367aee5f2b564906d70a79a27d7e
  $fShowNoPhone1 :: PhoneNumbers.Types.NoPhone -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: PhoneNumbers.Types.NoPhone) (eta :: GHC.Base.String) ->
                 case ds of wild { PhoneNumbers.Types.NoPhone ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      PhoneNumbers.Types.$fShowNoPhone2)
                   eta }) -}
9c05aaea13022cbc9b2f65680f900f50
  $fShowNoPhone2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowNoPhone3) -}
cbd33773462cc2f2949c175682541740
  $fShowNoPhone3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NoPhone"#) -}
e199367aee5f2b564906d70a79a27d7e
  $fShowNoPhone_$cshow ::
    PhoneNumbers.Types.NoPhone -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: PhoneNumbers.Types.NoPhone) ->
                 case x of wild { PhoneNumbers.Types.NoPhone ->
                 PhoneNumbers.Types.$fShowNoPhone2 }) -}
e199367aee5f2b564906d70a79a27d7e
  $fShowNoPhone_$cshowList ::
    [PhoneNumbers.Types.NoPhone] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ PhoneNumbers.Types.NoPhone
                   PhoneNumbers.Types.$fShowNoPhone1) -}
e199367aee5f2b564906d70a79a27d7e
  $fShowNoPhone_$cshowsPrec ::
    GHC.Types.Int -> PhoneNumbers.Types.NoPhone -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: PhoneNumbers.Types.NoPhone)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { PhoneNumbers.Types.NoPhone ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      PhoneNumbers.Types.$fShowNoPhone2)
                   eta }) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fShowPhoneNumberFormat ::
    GHC.Show.Show PhoneNumbers.Types.PhoneNumberFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ PhoneNumbers.Types.PhoneNumberFormat
                  PhoneNumbers.Types.$fShowPhoneNumberFormat_$cshowsPrec
                  PhoneNumbers.Types.$fShowPhoneNumberFormat_$cshow
                  PhoneNumbers.Types.$fShowPhoneNumberFormat_$cshowList -}
2341ad7f4515cbb64beeadfcdba595ae
  $fShowPhoneNumberFormat1 ::
    PhoneNumbers.Types.PhoneNumberFormat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U))><L,U>,
     Unfolding: (\ (w :: PhoneNumbers.Types.PhoneNumberFormat)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { PhoneNumbers.Types.PhoneNumberFormat ww1 ->
                 PhoneNumbers.Types.$w$cshowsPrec1 0# ww1 w1 }) -}
62a162b5aa104824537e9e8c2d5b1026
  $fShowPhoneNumberFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneNumberFormat "#) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fShowPhoneNumberFormat_$cshow ::
    PhoneNumbers.Types.PhoneNumberFormat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U))>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: PhoneNumbers.Types.PhoneNumberFormat) ->
                 case w of ww { PhoneNumbers.Types.PhoneNumberFormat ww1 ->
                 PhoneNumbers.Types.$w$cshow ww1 }) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fShowPhoneNumberFormat_$cshowList ::
    [PhoneNumbers.Types.PhoneNumberFormat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ PhoneNumbers.Types.PhoneNumberFormat
                   PhoneNumbers.Types.$fShowPhoneNumberFormat1) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fShowPhoneNumberFormat_$cshowsPrec ::
    GHC.Types.Int
    -> PhoneNumbers.Types.PhoneNumberFormat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U))><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: PhoneNumbers.Types.PhoneNumberFormat)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { PhoneNumbers.Types.PhoneNumberFormat ww3 ->
                 PhoneNumbers.Types.$w$cshowsPrec1 ww1 ww3 w2 } }) -}
afc243c0d70b7845b9e838e149b83738
  $fShowRegion :: GHC.Show.Show PhoneNumbers.Types.Region
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ PhoneNumbers.Types.Region
                  PhoneNumbers.Types.$fShowRegion_$cshowsPrec
                  PhoneNumbers.Types.$fShowRegion_$cshow
                  PhoneNumbers.Types.$fShowRegion_$cshowList -}
8699a081f2beec207161e70343083949
  $fShowRegion1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowRegion2) -}
510c6d4e8bb127819708df2e03df4295
  $fShowRegion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("E164"#) -}
7c3e650cfdd59ceaa5206293561db8b1
  $fShowRegion3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowRegion4) -}
fb09448d159be10b5b50e26f719ae992
  $fShowRegion4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("INTERNATIONAL"#) -}
26398ae2a1e65702c50e65a9f27ff556
  $fShowRegion5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PhoneNumbers.Types.$fShowRegion6) -}
55cc529c0b92e9a2abbefa13247e837a
  $fShowRegion6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NATIONAL"#) -}
afc243c0d70b7845b9e838e149b83738
  $fShowRegion_$cshow :: PhoneNumbers.Types.Region -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: PhoneNumbers.Types.Region) ->
                 case x of wild {
                   PhoneNumbers.Types.NATIONAL -> PhoneNumbers.Types.$fShowRegion5
                   PhoneNumbers.Types.INTERNATIONAL
                   -> PhoneNumbers.Types.$fShowRegion3
                   PhoneNumbers.Types.E164 -> PhoneNumbers.Types.$fShowRegion1 }) -}
afc243c0d70b7845b9e838e149b83738
  $fShowRegion_$cshowList ::
    [PhoneNumbers.Types.Region] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ PhoneNumbers.Types.Region
                   PhoneNumbers.Types.$w$cshowsPrec2) -}
afc243c0d70b7845b9e838e149b83738
  $fShowRegion_$cshowsPrec ::
    GHC.Types.Int -> PhoneNumbers.Types.Region -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: PhoneNumbers.Types.Region)
                   (w2 :: GHC.Base.String) ->
                 PhoneNumbers.Types.$w$cshowsPrec2 w1 w2) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fToJSONPhoneNumberFormat ::
    Data.Aeson.Types.ToJSON.ToJSON PhoneNumbers.Types.PhoneNumberFormat
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ PhoneNumbers.Types.PhoneNumberFormat
                  PhoneNumbers.Types.$fToJSONPhoneNumberFormat_$ctoJSON
                  PhoneNumbers.Types.$fToJSONPhoneNumberFormat1
                    `cast`
                  (<PhoneNumbers.Types.PhoneNumberFormat>_R
                   ->_R Trans
                            (forall (r :: <*>_N).
                             <Data.ByteString.Builder.Internal.BuildStep r>_R
                             ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                            (Trans
                                 (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                 (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                           <Data.Aeson.Types.Internal.Value>_P))))
                  PhoneNumbers.Types.$fToJSONPhoneNumberFormat_$ctoJSONList
                  PhoneNumbers.Types.$fToJSONPhoneNumberFormat_$ctoEncodingList -}
2341ad7f4515cbb64beeadfcdba595ae
  $fToJSONPhoneNumberFormat1 ::
    PhoneNumbers.Types.PhoneNumberFormat
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U,U,U))><L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (value :: PhoneNumbers.Types.PhoneNumberFormat)
                   @ r
                   (eta :: Data.ByteString.Builder.Internal.BuildStep r)
                   (eta1 :: Data.ByteString.Builder.Internal.BufferRange)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case value of wild { PhoneNumbers.Types.PhoneNumberFormat arg1 ->
                 Data.Aeson.Encoding.Builder.text1 arg1 @ r eta eta1 eta2 }) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fToJSONPhoneNumberFormat_$ctoEncodingList ::
    [PhoneNumbers.Types.PhoneNumberFormat]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ PhoneNumbers.Types.PhoneNumberFormat
                   PhoneNumbers.Types.$fToJSONPhoneNumberFormat1
                     `cast`
                   (<PhoneNumbers.Types.PhoneNumberFormat>_R
                    ->_R Trans
                             (forall (r :: <*>_N).
                              <Data.ByteString.Builder.Internal.BuildStep r>_R
                              ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                             (Trans
                                  (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                  (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P))))) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fToJSONPhoneNumberFormat_$ctoJSON ::
    PhoneNumbers.Types.PhoneNumberFormat
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m3,
     Unfolding: InlineRule (1, True, False)
                (\ (value :: PhoneNumbers.Types.PhoneNumberFormat) ->
                 case value of wild { PhoneNumbers.Types.PhoneNumberFormat arg1 ->
                 Data.Aeson.Types.Internal.$WString arg1 }) -}
2341ad7f4515cbb64beeadfcdba595ae
  $fToJSONPhoneNumberFormat_$ctoJSONList ::
    [PhoneNumbers.Types.PhoneNumberFormat]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [PhoneNumbers.Types.PhoneNumberFormat]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ PhoneNumbers.Types.PhoneNumberFormat
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ PhoneNumbers.Types.PhoneNumberFormat
                                     c
                                     PhoneNumbers.Types.$fToJSONPhoneNumberFormat_$ctoJSON)
                                  n1
                                  x)))))) -}
92c83193d78c50674ca0269c4db93bee
  $tc'CA :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1151146605614181599##
                   14138178624988364308##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'CA2
                   0#
                   PhoneNumbers.Types.$tc'CA1) -}
180ac79a8493ce60f5d3a695c4362f9d
  $tc'CA1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
a0d37ef3c574e8dfa704e4662c4e0d6f
  $tc'CA2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tc'CA3) -}
1bbaa8ec4b27cc53e45f6e8d29fd54b2
  $tc'CA3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CA"#) -}
b6464fddf48420ceab068ed5880d2e6f
  $tc'E1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
09748ac33c7adb02df43667221561dac
  $tc'E164 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11869158473948677851##
                   14506714804981958623##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'E2
                   0#
                   PhoneNumbers.Types.$tc'E1) -}
e418e34ec9d2398383ef24b145442e6c
  $tc'E2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tc'E3) -}
49f386f38b37c46e318c9e9f7cdea5d5
  $tc'E3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'E164"#) -}
4d5510e28ceac935df61c482b9dfaf45
  $tc'GB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14907288184877499526##
                   4697403732981222049##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'GB1
                   0#
                   PhoneNumbers.Types.$tc'CA1) -}
ca9b97f3109206ce58e82b0291313d0c
  $tc'GB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tc'GB2) -}
dec38eda6bcebf6aa7ede392a526551e
  $tc'GB2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GB"#) -}
bc0421e0340b8560c12cf0fc71619162
  $tc'INTERNATIONAL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13934564122456808448##
                   5966270343003824670##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'INTERNATIONAL1
                   0#
                   PhoneNumbers.Types.$tc'E1) -}
b2a0aa48f60f32f19f725eeb189604d3
  $tc'INTERNATIONAL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tc'INTERNATIONAL2) -}
eaae11bbf67a2264d7bbfb6c30e74408
  $tc'INTERNATIONAL2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'INTERNATIONAL"#) -}
3d6041eedde01f1646b7f1a7ba1e39da
  $tc'NATIONAL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8825895213458577743##
                   12464410893862825319##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'NATIONAL1
                   0#
                   PhoneNumbers.Types.$tc'E1) -}
0b04878c901f7ba931571d6b124d742d
  $tc'NATIONAL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tc'NATIONAL2) -}
249a1dfcacf144f7282c621daa340301
  $tc'NATIONAL2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NATIONAL"#) -}
1ca9708d6736a9bc404864371ea54394
  $tc'NoPhone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13383611341516926657##
                   9188009684662726544##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'NoPhone2
                   0#
                   PhoneNumbers.Types.$tc'NoPhone1) -}
4c8f6ee41cf7386a2c94149adf2767ee
  $tc'NoPhone1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
a8e9e0627aa392ac6a580c78e4a6db6c
  $tc'NoPhone2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tc'NoPhone3) -}
d432b3f5d79cdb6ee77253dd05d57b72
  $tc'NoPhone3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NoPhone"#) -}
ca2b90cffa061f54650269bfd87c929b
  $tc'None :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12548010885715395002##
                   11470722445920433629##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'None1
                   0#
                   PhoneNumbers.Types.$tc'CA1) -}
79e6fa10f61507e080ec3424d8128421
  $tc'None1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tc'None2) -}
a173d4f4a37d6385af7ae8fcfa281af5
  $tc'None2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'None"#) -}
daeb9d9e14e36fe4ca73c8dc48b5157c
  $tc'PhoneNumber :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10911495519414455504##
                   8060543526843088026##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'PhoneNumber2
                   0#
                   PhoneNumbers.Types.$tc'PhoneNumber1) -}
ee1300c57a0c14e4ddc4bf47b89c1759
  $tc'PhoneNumber1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bdf5968b19ea547615d4458355b3290a
  $tc'PhoneNumber2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tc'PhoneNumber3) -}
a0e74af0602a91ff66956e4c075f527d
  $tc'PhoneNumber3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PhoneNumber"#) -}
131c6397067e217e2dc8f2eb4b597438
  $tc'PhoneNumberFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3232055423784592153##
                   9024003387574168986##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'PhoneNumberFormat2
                   0#
                   PhoneNumbers.Types.$tc'PhoneNumberFormat1) -}
83e960eed53edb76d41a1d50a834eb4f
  $tc'PhoneNumberFormat1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
425f4b1f45b23d86fd873a310628eeb8
  $tc'PhoneNumberFormat2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tc'PhoneNumberFormat3) -}
95dedd4b1db9a354c56fe539fa0be30b
  $tc'PhoneNumberFormat3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PhoneNumberFormat"#) -}
cac97fa62fdf9f0e7a592a9b5d62261f
  $tc'PhoneNumberMatcher :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   705043260907019239##
                   10966786714231698414##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'PhoneNumberMatcher2
                   0#
                   PhoneNumbers.Types.$tc'PhoneNumberMatcher1) -}
a6b05f3da0ac213055afe6dca96180da
  $tc'PhoneNumberMatcher1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bcd80a7385fee77abddd8bf078bbebe5
  $tc'PhoneNumberMatcher2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tc'PhoneNumberMatcher3) -}
0e4dad9dac011c668cc403b62944c4ab
  $tc'PhoneNumberMatcher3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PhoneNumberMatcher"#) -}
920b72836027913371cb6e8365d6c3c1
  $tc'PhoneNumberModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1894468655348155907##
                   6936528425684923922##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tc'PhoneNumberModule2
                   0#
                   PhoneNumbers.Types.$tc'PhoneNumberModule1) -}
933ad48424e90eb69e8f43cfa7d9ef0f
  $tc'PhoneNumberModule1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
42b8af83152d4bd878b4dda537ed4025
  $tc'PhoneNumberModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tc'PhoneNumberModule3) -}
fb30c518d9af16328ac54efe9ed85c4d
  $tc'PhoneNumberModule3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PhoneNumberModule"#) -}
b59a7b5f25d0ffb586c5913eac2e454c
  $tcCountryCode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17343176052319773925##
                   17137918756114786909##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcCountryCode1
                   0#
                   GHC.Types.krep$*) -}
c315392e754c7657a67b43967e83d264
  $tcCountryCode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tcCountryCode2) -}
b28643064deee2121e7018869e1298cd
  $tcCountryCode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CountryCode"#) -}
ffd39b955a5545069f8c52d2fd7150f5
  $tcNoPhone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1202075858445032668##
                   8439562136820780594##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcNoPhone1
                   0#
                   GHC.Types.krep$*) -}
3e7926f73ef3e060a73df451c0b0c800
  $tcNoPhone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$fShowNoPhone3) -}
e26560da231fa9b1ac6b337ac6f1a545
  $tcPhoneNumber :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   489764327694279839##
                   3474120230357159963##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcPhoneNumber1
                   0#
                   GHC.Types.krep$*) -}
c2d8a1f67c6416336a24275324305c22
  $tcPhoneNumber1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tcPhoneNumber2) -}
97525985301ca8af165d8e912abd3b22
  $tcPhoneNumber2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneNumber"#) -}
a7bd1e073603b2510b0efeb67b9b4bb4
  $tcPhoneNumberFormat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10914780413090033716##
                   5292758708674640844##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcPhoneNumberFormat1
                   0#
                   GHC.Types.krep$*) -}
d039db2bdbfafe246534b2350b26e1c6
  $tcPhoneNumberFormat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tcPhoneNumberFormat2) -}
6b110722c6c0855572a5a28d8ce6ce6e
  $tcPhoneNumberFormat2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneNumberFormat"#) -}
1c96728549fa91ec9f8937b1187cfa65
  $tcPhoneNumberMatcher :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6607269229602772808##
                   7646784913222994507##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcPhoneNumberMatcher1
                   0#
                   GHC.Types.krep$*) -}
9f6fb4825076482b083f65ced9460fd7
  $tcPhoneNumberMatcher1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tcPhoneNumberMatcher2) -}
849ecccd47b5f3d6bb866f8a0f20d941
  $tcPhoneNumberMatcher2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneNumberMatcher"#) -}
0b19410f62f945016228aded90ae5b83
  $tcPhoneNumberModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12149162561082770081##
                   262517148984537574##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcPhoneNumberModule1
                   0#
                   GHC.Types.krep$*) -}
5e5ace1dbb2ed90e5a06e25852e8dc5f
  $tcPhoneNumberModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   PhoneNumbers.Types.$tcPhoneNumberModule2) -}
c0927f8168c7a6f3df9ac4773fc48941
  $tcPhoneNumberModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneNumberModule"#) -}
07460e376ffc044a59686b92ee218724
  $tcRegion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3121387665511023315##
                   12309377377926589664##
                   PhoneNumbers.Types.$trModule
                   PhoneNumbers.Types.$tcRegion1
                   0#
                   GHC.Types.krep$*) -}
e268bd80b19e77f852539b55f452c290
  $tcRegion1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$tcRegion2) -}
f8b4f8505021d7de8d799b2c8f1a4829
  $tcRegion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Region"#) -}
3f41fb6edd14abee0e3b776e1eec2ef4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PhoneNumbers.Types.$trModule3
                   PhoneNumbers.Types.$trModule1) -}
6ea57c060d5966af3835ece78c37f392
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$trModule2) -}
9f96ac46849acd33ccbb6cc906bbc193
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneNumbers.Types"#) -}
163e9630cd4f81d57ea3ea27fd48957e
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneNumbers.Types.$trModule4) -}
5cd2f65355f18c16c85b3b550176eeb0
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("haskell-phonenumbers-0.1.0.0-G1l6X6dWTOTCGj5StqFqBF"#) -}
bc8e3c1f09c516a472f4f52abf9270b9
  $w$cshow :: Data.Text.Internal.Text -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text) ->
                 GHC.CString.unpackAppendCString#
                   PhoneNumbers.Types.$fShowPhoneNumberFormat2
                   (case Data.Text.Show.$w$cshowsPrec
                           ww
                           (GHC.Types.[] @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                    GHC.Types.: @ GHC.Types.Char ww2 ww3 })) -}
57b663ec0137efbc974036ab71d14fff
  $w$cshowsPrec ::
    PhoneNumbers.Types.CountryCode
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: PhoneNumbers.Types.CountryCode)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   PhoneNumbers.Types.CA
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        PhoneNumbers.Types.$fShowCountryCode5
                        w1
                   PhoneNumbers.Types.GB
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        PhoneNumbers.Types.$fShowCountryCode3
                        w1
                   PhoneNumbers.Types.None
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        PhoneNumbers.Types.$fShowCountryCode1
                        w1 }) -}
43c553c94831a97fcc433d3073e2a3a9
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U,U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        PhoneNumbers.Types.$fShowPhoneNumberFormat2
                        (case Data.Text.Show.$w$cshowsPrec ww1 w of ww2 { (#,#) ww3 ww4 ->
                         GHC.Types.: @ GHC.Types.Char ww3 ww4 })
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           PhoneNumbers.Types.$fShowPhoneNumberFormat2
                           (case Data.Text.Show.$w$cshowsPrec
                                   ww1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)2
                                      w) of ww2 { (#,#) ww3 ww4 ->
                            GHC.Types.: @ GHC.Types.Char ww3 ww4 })) }) -}
afc243c0d70b7845b9e838e149b83738
  $w$cshowsPrec2 ::
    PhoneNumbers.Types.Region -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: PhoneNumbers.Types.Region)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   PhoneNumbers.Types.NATIONAL
                   -> GHC.Base.++ @ GHC.Types.Char PhoneNumbers.Types.$fShowRegion5 w1
                   PhoneNumbers.Types.INTERNATIONAL
                   -> GHC.Base.++ @ GHC.Types.Char PhoneNumbers.Types.$fShowRegion3 w1
                   PhoneNumbers.Types.E164
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        PhoneNumbers.Types.$fShowRegion1
                        w1 }) -}
57b663ec0137efbc974036ab71d14fff
  data CountryCode = CA | GB | None
e199367aee5f2b564906d70a79a27d7e
  data NoPhone = NoPhone
9a29fda1b12901e1180c0289da0af94b
  data PhoneNumber = PhoneNumber CPython.Internal.SomeObject
2341ad7f4515cbb64beeadfcdba595ae
  data PhoneNumberFormat = PhoneNumberFormat Data.Text.Internal.Text
6d3f4615337ee48cdbc0f6848bf605d9
  type PhoneNumberFormats = [PhoneNumbers.Types.PhoneNumberFormat]
03b55e2266dda48bbcbcc31f0e94fa24
  data PhoneNumberMatcher
    = PhoneNumberMatcher [CPython.Internal.SomeObject]
f6ff9688f42051f1f292bc89ea49dbd8
  data PhoneNumberModule
    = PhoneNumberModule CPython.Types.Module.Module
1030b32a553cb84f7d243347f883c862
  type PhoneNumberRegion =
    (PhoneNumbers.Types.PhoneNumber, PhoneNumbers.Types.Region)
afc243c0d70b7845b9e838e149b83738
  data Region = NATIONAL | INTERNATIONAL | E164
instance Data.Aeson.Types.FromJSON.FromJSON [PhoneNumbers.Types.PhoneNumberFormat]
  = PhoneNumbers.Types.$fFromJSONPhoneNumberFormat
instance GHC.Show.Show [PhoneNumbers.Types.CountryCode]
  = PhoneNumbers.Types.$fShowCountryCode
instance GHC.Show.Show [PhoneNumbers.Types.NoPhone]
  = PhoneNumbers.Types.$fShowNoPhone
instance GHC.Show.Show [PhoneNumbers.Types.PhoneNumberFormat]
  = PhoneNumbers.Types.$fShowPhoneNumberFormat
instance GHC.Show.Show [PhoneNumbers.Types.Region]
  = PhoneNumbers.Types.$fShowRegion
instance Data.Aeson.Types.ToJSON.ToJSON [PhoneNumbers.Types.PhoneNumberFormat]
  = PhoneNumbers.Types.$fToJSONPhoneNumberFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

